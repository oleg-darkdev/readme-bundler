{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["const cl = require('node-cl-log'),\n      fs = require('fs'),\n      path = require('./src/lib/path'),\n      checkingExistenceDirectory = require('./src/lib/checkingExistenceDirectory');\n\nconst pathDirLanguageModules = path.src.langModules.dir,\n      pathDocsDir = path.build.md.dir,\n      minArguments = 3;\n\n// params for print help\nconst firstParam = require('./src/lib/help/helpFirstParams.js'),\n      secondParam = require('./src/lib/help/helpSecondParams.js');\n\n\nif (process.argv.length <= minArguments) {\n  cl.log(\"Usage: \");\n  for(let param in firstParam) {\n    cl.log(firstParam[param])\n  };\n  cl.log('\\n')\n  for(let param in secondParam) {\n    cl.log(secondParam[param])\n  };\n  process.exit(-1);\n} else if (process.argv.length > minArguments) {\n  fs.readdir(pathDirLanguageModules, function (err, langDir) {\n    let resultFoundLanguageModule = '',\n        [generationType, language] = [process.argv[2], process.argv[3].slice(1, 3)];\n    // // cl.log(`The following language muzzles are available ${langDir}`);\n    langDir.forEach((el, ind) => {\n      el = el.slice(0, 2);\n      if (el == language) {\n        resultFoundLanguageModule = langDir[ind];\n        cl.log(`An argument was given for the language ${resultFoundLanguageModule}`);\n      }\n      if (ind == langDir.length){\n        cl.red('Warning! Dont find language module!');\n        for(let param in secondParam) {\n          cl.cya(secondParam[param])\n        }\n        process.exit(-1);\n      }\n    });\n\n  if (resultFoundLanguageModule){\n      // cl.gre('import module !')\n      // import the language module chosen by the user\n      const languageModule = require(`${pathDirLanguageModules + resultFoundLanguageModule}`);\n\n      if (generationType == '-d') {\n        checkingExistenceDirectory(pathDocsDir);\n        // cl.log('Clone the basic templates on \"./docs\" directory');\n        languageModule.genDocs();\n        // for(var key in languageModule) {\n        //   cl.log(key + \" : \" + languageModule[key]);\n        // }\n        // cl.log(languageModule);\n\n      } else if (generationType == '-r') {\n        // cl.gre('Generate the readme file');\n        languageModule.genReadme();\n      } else if (generationType == '-cm') {\n        // cl.gre('Generate the readme file');\n        languageModule.cleanMd();\n      } else if (generationType == '-cr') {\n        // cl.gre('Generate the readme file');\n        languageModule.cleanReadme();\n      } else if (generationType == '-ch') {\n        // cl.gre('Generate the readme file');\n        languageModule.cleanHtml();\n      } else if (generationType == '-h') {\n        // cl.gre('Generate the readme file');\n        languageModule.genHtml();\n      } else {\n        cl.red('The wrong argument, all list of arguments is transferred:')\n      }\n    };\n  }); // end fs.readdir\n}; // end if\n\n"],"names":["cl","require","fs","path","checkingExistenceDirectory","pathDirLanguageModules","src","langModules","dir","pathDocsDir","build","md","minArguments","firstParam","secondParam","process","argv","length","log","param","exit","readdir","err","langDir","resultFoundLanguageModule","generationType","language","slice","forEach","el","ind","red","cya","languageModule","genDocs","genReadme","cleanMd","cleanReadme","cleanHtml","genHtml"],"mappings":";;AAAA,MAAMA,KAAKC,QAAQ,aAAR,CAAX;MACMC,KAAKD,QAAQ,IAAR,CADX;MAEME,OAAOF,QAAQ,gBAAR,CAFb;MAGMG,6BAA6BH,QAAQ,sCAAR,CAHnC;;AAKA,MAAMI,yBAAyBF,KAAKG,GAAL,CAASC,WAAT,CAAqBC,GAApD;MACMC,cAAcN,KAAKO,KAAL,CAAWC,EAAX,CAAcH,GADlC;MAEMI,eAAe,CAFrB;;;AAKA,MAAMC,aAAaZ,QAAQ,mCAAR,CAAnB;MACMa,cAAcb,QAAQ,oCAAR,CADpB;;AAIA,IAAIc,QAAQC,IAAR,CAAaC,MAAb,IAAuBL,YAA3B,EAAyC;KACpCM,GAAH,CAAO,SAAP;OACI,IAAIC,KAAR,IAAiBN,UAAjB,EAA6B;OACxBK,GAAH,CAAOL,WAAWM,KAAX,CAAP;GAEFnB,KAAGkB,GAAH,CAAO,IAAP;OACI,IAAIC,KAAR,IAAiBL,WAAjB,EAA8B;OACzBI,GAAH,CAAOJ,YAAYK,KAAZ,CAAP;GAEFJ,UAAQK,IAAR,CAAa,CAAC,CAAd;CATF,MAUO,IAAIL,QAAQC,IAAR,CAAaC,MAAb,GAAsBL,YAA1B,EAAwC;KAC1CS,OAAH,CAAWhB,sBAAX,EAAmC,UAAUiB,GAAV,EAAeC,OAAf,EAAwB;QACrDC,4BAA4B,EAAhC;QACI,CAACC,cAAD,EAAiBC,QAAjB,IAA6B,CAACX,QAAQC,IAAR,CAAa,CAAb,CAAD,EAAkBD,QAAQC,IAAR,CAAa,CAAb,EAAgBW,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB,CAAlB,CADjC;;YAGQC,OAAR,CAAgB,CAACC,EAAD,EAAKC,GAAL,KAAa;WACtBD,GAAGF,KAAH,CAAS,CAAT,EAAY,CAAZ,CAAL;UACIE,MAAMH,QAAV,EAAoB;oCACUH,QAAQO,GAAR,CAA5B;WACGZ,GAAH,CAAQ,0CAAyCM,yBAA0B,EAA3E;;UAEEM,OAAOP,QAAQN,MAAnB,EAA0B;WACrBc,GAAH,CAAO,qCAAP;aACI,IAAIZ,KAAR,IAAiBL,WAAjB,EAA8B;aACzBkB,GAAH,CAAOlB,YAAYK,KAAZ,CAAP;;gBAEMC,IAAR,CAAa,CAAC,CAAd;;KAXJ;;QAeEI,yBAAJ,EAA8B;;;YAGpBS,iBAAiBhC,QAAS,GAAEI,yBAAyBmB,yBAA0B,EAA9D,CAAvB;;UAEIC,kBAAkB,IAAtB,EAA4B;mCACChB,WAA3B;;uBAEeyB,OAAf;;;;;OAHF,MASO,IAAIT,kBAAkB,IAAtB,EAA4B;;uBAElBU,SAAf;OAFK,MAGA,IAAIV,kBAAkB,KAAtB,EAA6B;;uBAEnBW,OAAf;OAFK,MAGA,IAAIX,kBAAkB,KAAtB,EAA6B;;uBAEnBY,WAAf;OAFK,MAGA,IAAIZ,kBAAkB,KAAtB,EAA6B;;uBAEnBa,SAAf;OAFK,MAGA,IAAIb,kBAAkB,IAAtB,EAA4B;;uBAElBc,OAAf;OAFK,MAGA;WACFR,GAAH,CAAO,2DAAP;;KAGL,GApDD,EAD6C;"}
