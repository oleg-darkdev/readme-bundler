{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["/*\n\t@description Для вызова доступны методы:\n\tru.docs()\n\tru.readme()\n*/\n// import ru from './lib/language_modules/ru';\n/*\n\t@description Для вызова доступны методы:\n\tbel.docs()\n\tbel.readme()\n*/\n// import bel from './lib/language_modules/bel';\n/*\n\t@description Для вызова доступны методы:\n\ten.docs()\n\ten.readme()\n*/\n// import en from './lib/language_modules/en';\n/*\n\t@description Для вызова доступны методы:\n\tua.docs()\n\tua.readme()\n*/\n// import ua from './lib/language_modules/ua';\n/*\n\t@description Для вызова доступны методы:\n\tpl.docs()\n\tpl.readme()\n*/\n// import pl from './lib/language_modules/pl';\n\n/*\n  TODO:\n    добавить описание параметров в случае если их передано < 3\n*/\n\n// const languageModule = require('../src/lib/lang_modules/en.js');\n\nconst cl = require('node-cl-log'),\n      fs = require('fs'),\n      path = require('./src/lib/path'),\n      checkingExistenceDirectory = require('./src/lib/checkingExistenceDirectory');\n\nconst pathDirLanguageModules = path.src.langModules.dir,\n      pathDocsDir = path.build.md.dir,\n      minArguments = 3;\n\nconst firstParam = require('./src/lib/help/helpFirstParams.js'),\n      secondParam = require('./src/lib/help/helpSecondParams.js');\n\n\n// let [generationType = '-r', language = 'en'] = [process.argv[2], process.argv[3].slice(1, 3)];\n\nif (process.argv.length <= minArguments) {\n  cl.log(\"Usage: \");\n  for(let param in firstParam) {\n    cl.log(firstParam[param])\n  };\n  cl.log('\\n')\n  for(let param in secondParam) {\n    cl.log(secondParam[param])\n  };\n  process.exit(-1);\n}\n\n\n// else (process.argv.length > minArguments){\n//   fs.readdir(pathDirLanguageModules, function (err, items) {\n//     let resultFoundLanguageModule = '';\n//     // cl.log(items);\n//     // cl.log(language);\n//     items.forEach((el, ind) => {\n//       // cl.log(el = el.slice(0, 2));\n//       el = el.slice(0, 2);\n//       if (el == language) resultFoundLanguageModule = items[ind]\n//     });\n//     // if (resultFoundLanguageModule) {\n//     //   // cl.gre('import module !')\n//     //   // import the language module chosen by the user\n//     //   const languageModule = require(`${pathDirLanguageModules + resultFoundLanguageModule}`);\n\n//     //   // cl.log(languageModule);\n//     //   // if (generationType == '-d') {\n\n//     //   //   checkingExistenceDirectory(pathDocsDir);\n//     //   //   cl.log('Clone the basic templates on \"./docs\" directory');\n//     //   //   languageModule.genDocs();\n//     //   //   // for(var key in languageModule) {\n//     //   //   //   cl.log(key + \" : \" + languageModule[key]);\n//     //   //   // }\n//     //   //   // cl.log(languageModule);\n\n//     //   // } else if (generationType == '-r') {\n//     //   //   cl.gre('Generate the readme file');\n//     //   //   languageModule.genReadme();\n//     //   // }\n//     //   // } else if (generationType == '-h') {\n//     //   //   cl.gre('Generate the readme file');\n//     //   //   languageModule.genHtml();\n//     //   // };\n\n//     //   // else if {\n//     //   //   cl.red('The wrong argument, all list of arguments is transferred:')\n//     //   // };\n//     // }\n//     //  else {\n//     //   cl.red('Warning? Dont find language module!');\n//     //   cl.log('end');\n//     });\n// }; // end fs.readdir\n\n"],"names":["cl","require","fs","path","checkingExistenceDirectory","pathDirLanguageModules","src","langModules","dir","pathDocsDir","build","md","minArguments","firstParam","secondParam","process","argv","length","log","param","exit"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,MAAMA,KAAKC,QAAQ,aAAR,CAAX;MACMC,KAAKD,QAAQ,IAAR,CADX;MAEME,OAAOF,QAAQ,gBAAR,CAFb;MAGMG,6BAA6BH,QAAQ,sCAAR,CAHnC;;AAKA,MAAMI,yBAAyBF,KAAKG,GAAL,CAASC,WAAT,CAAqBC,GAApD;MACMC,cAAcN,KAAKO,KAAL,CAAWC,EAAX,CAAcH,GADlC;MAEMI,eAAe,CAFrB;;AAIA,MAAMC,aAAaZ,QAAQ,mCAAR,CAAnB;MACMa,cAAcb,QAAQ,oCAAR,CADpB;;;;AAMA,IAAIc,QAAQC,IAAR,CAAaC,MAAb,IAAuBL,YAA3B,EAAyC;KACpCM,GAAH,CAAO,SAAP;OACI,IAAIC,KAAR,IAAiBN,UAAjB,EAA6B;OACxBK,GAAH,CAAOL,WAAWM,KAAX,CAAP;GAEFnB,KAAGkB,GAAH,CAAO,IAAP;OACI,IAAIC,KAAR,IAAiBL,WAAjB,EAA8B;OACzBI,GAAH,CAAOJ,YAAYK,KAAZ,CAAP;GAEFJ,UAAQK,IAAR,CAAa,CAAC,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}