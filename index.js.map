{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["/*\n\t@description Для вызова доступны методы:\n\tru.docs()\n\tru.readme()\n*/\n// import ru from './lib/language_modules/ru';\n/*\n\t@description Для вызова доступны методы:\n\tbel.docs()\n\tbel.readme()\n*/\n// import bel from './lib/language_modules/bel';\n/*\n\t@description Для вызова доступны методы:\n\ten.docs()\n\ten.readme()\n*/\n// import en from './lib/language_modules/en';\n/*\n\t@description Для вызова доступны методы:\n\tua.docs()\n\tua.readme()\n*/\n// import ua from './lib/language_modules/ua';\n/*\n\t@description Для вызова доступны методы:\n\tpl.docs()\n\tpl.readme()\n*/\n// import pl from './lib/language_modules/pl';\n\n/*\n  TODO:\n    добавить описание параметров в случае если их передано < 3\n*/\n\n// const languageModule = require('../src/lib/lang_modules/en.js');\n\nconst cl = require('node-cl-log'),\n  fs = require('fs');\n\nconst pathDirLanguageModules = './src/lib/lang_modules/';\nconst pathDocsDir = './docs/';\n\nlet [generationType = '-r', language = 'en'] = [process.argv[2], process.argv[3].slice(1, 3)];\n\nfunction checkingExistenceDirectory (pathDocsDir) {\n  let dirLanguageModuleFounded = false;\n\n  fs.readdir(pathDocsDir, function (err, items) {\n    items.forEach((el, ind) => {\n      if (el == language.toUpperCase()) dirLanguageModuleFounded = true;\n    });\n  });\n  if (dirLanguageModuleFounded != false) {\n    fs.mkdirSync(`${pathDocsDir + language.toUpperCase()}`);\n    // cl.whi('create dir')\n  };\n};\n\n\n\n// 3 - minimum arguments\nlet minArguments = 3;\nif (process.argv.length <= minArguments) {\n  cl.log(\"Usage: \" + __filename + \" SOME_PARAM\");\n  process.exit(-1);\n} else if (process.argv.length > minArguments) {\n  fs.readdir(pathDirLanguageModules, function (err, items) {\n    let resultFoundLanguageModule = false;\n    // cl.log(items);\n    // cl.log(language);\n    items.forEach((el, ind) => {\n      // cl.log(el = el.slice(0, 2));\n      el = el.slice(0, 2)\n      if (el == language) resultFoundLanguageModule = items[ind];\n    });\n    if (resultFoundLanguageModule) {\n      // cl.gre('import module !')\n      // import the language module chosen by the user\n      const languageModule = require(`${pathDirLanguageModules + resultFoundLanguageModule}`);\n\n      // cl.log(languageModule);\n      if (generationType == '-d') {\n\n        checkingExistenceDirectory(pathDocsDir);\n        cl.log('Clone the basic templates on \"./docs\" directory');\n        languageModule.genDocs();\n        // for(var key in languageModule) {\n        //   cl.log(key + \" : \" + languageModule[key]);\n        // }\n        // cl.log(languageModule);\n\n      } else if (generationType == '-r') {\n        cl.whi('')\n        cl.gre('Generate the readme file');\n        cl.whi('')\n        languageModule.genReadme();\n      }\n      // else if (generationType == '-h') {\n      //   // languageModule.genHtml();\n      // }\n      else {\n        cl.red('The wrong argument, all list of arguments is transferred:')\n      };\n    } else {\n      cl.red(' Warning? Dont find language module!');\n      cl.log()\n      cl.log('end')\n    }\n  }); // end fs.readdir\n}; // end else if\n"],"names":["cl","require","fs","pathDirLanguageModules","pathDocsDir","generationType","language","process","argv","slice","checkingExistenceDirectory","dirLanguageModuleFounded","readdir","err","items","forEach","el","ind","toUpperCase","mkdirSync","minArguments","length","log","__filename","exit","resultFoundLanguageModule","languageModule","genDocs","whi","gre","genReadme","red"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,MAAMA,KAAKC,QAAQ,aAAR,CAAX;MACEC,KAAKD,QAAQ,IAAR,CADP;;AAGA,MAAME,yBAAyB,yBAA/B;AACA,MAAMC,cAAc,SAApB;;AAEA,IAAI,CAACC,iBAAiB,IAAlB,EAAwBC,WAAW,IAAnC,IAA2C,CAACC,QAAQC,IAAR,CAAa,CAAb,CAAD,EAAkBD,QAAQC,IAAR,CAAa,CAAb,EAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB,CAAlB,CAA/C;;AAEA,SAASC,0BAAT,CAAqCN,WAArC,EAAkD;MAC5CO,2BAA2B,KAA/B;;KAEGC,OAAH,CAAWR,WAAX,EAAwB,UAAUS,GAAV,EAAeC,KAAf,EAAsB;UACtCC,OAAN,CAAc,CAACC,EAAD,EAAKC,GAAL,KAAa;UACrBD,MAAMV,SAASY,WAAT,EAAV,EAAkCP,2BAA2B,IAA3B;KADpC;GADF;MAKIA,4BAA4B,KAAhC,EAAuC;OAClCQ,SAAH,CAAc,GAAEf,cAAcE,SAASY,WAAT,EAAuB,EAArD;;GAGH;;AAKD,IAAIE,eAAe,CAAnB;AACA,IAAIb,QAAQC,IAAR,CAAaa,MAAb,IAAuBD,YAA3B,EAAyC;KACpCE,GAAH,CAAO,YAAYC,UAAZ,GAAyB,aAAhC;UACQC,IAAR,CAAa,CAAC,CAAd;CAFF,MAGO,IAAIjB,QAAQC,IAAR,CAAaa,MAAb,GAAsBD,YAA1B,EAAwC;KAC1CR,OAAH,CAAWT,sBAAX,EAAmC,UAAUU,GAAV,EAAeC,KAAf,EAAsB;QACnDW,4BAA4B,KAAhC;;;UAGMV,OAAN,CAAc,CAACC,EAAD,EAAKC,GAAL,KAAa;;WAEpBD,GAAGP,KAAH,CAAS,CAAT,EAAY,CAAZ,CAAL;UACIO,MAAMV,QAAV,EAAoBmB,4BAA4BX,MAAMG,GAAN,CAA5B;KAHtB;QAKIQ,yBAAJ,EAA+B;;;YAGvBC,iBAAiBzB,QAAS,GAAEE,yBAAyBsB,yBAA0B,EAA9D,CAAvB;;;UAGIpB,kBAAkB,IAAtB,EAA4B;;mCAECD,WAA3B;WACGkB,GAAH,CAAO,iDAAP;uBACeK,OAAf;;;;;OAJF,MAUO,IAAItB,kBAAkB,IAAtB,EAA4B;WAC9BuB,GAAH,CAAO,EAAP;WACGC,GAAH,CAAO,0BAAP;WACGD,GAAH,CAAO,EAAP;uBACeE,SAAf;;;;;WAKG;aACAC,GAAH,CAAO,2DAAP;SAEH,KA5BD,MA4BO;SACFA,GAAH,CAAO,sCAAP;SACGT,GAAH;SACGA,GAAH,CAAO,KAAP;;GAxCJ,EAD6C;"}