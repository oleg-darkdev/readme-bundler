"use strict";const cl=require("node-cl-log"),fs=require("fs"),pathDirLanguageModules="./src/lib/lang_modules/",pathDocsDir="./docs/";let[generationType="-r",language="en"]=[process.argv[2],process.argv[3].slice(1,3)];function checkingExistenceDirectory(e){let r=!1;fs.readdir(e,function(e,n){n.forEach((e,n)=>{e==language.toUpperCase()&&(r=!0)})}),0!=r&&fs.mkdirSync(`${e+language.toUpperCase()}`)}let minArguments=3;process.argv.length<=minArguments?(cl.log("Usage: "+__filename+" SOME_PARAM"),process.exit(-1)):process.argv.length>minArguments&&fs.readdir(pathDirLanguageModules,function(e,r){let n=!1;if(r.forEach((e,a)=>{(e=e.slice(0,2))==language&&(n=r[a])}),n){const e=require(`${pathDirLanguageModules+n}`);"-d"==generationType?(checkingExistenceDirectory("./docs/"),cl.log('Clone the basic templates on "./docs" directory'),e.genDocs()):"-r"==generationType?(cl.whi(""),cl.gre("Generate the readme file"),cl.whi(""),e.genReadme()):cl.red("The wrong argument, all list of arguments is transferred:")}else cl.red(" Warning? Dont find language module!"),cl.log(),cl.log("end")});